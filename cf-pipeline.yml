Parameters:
  BranchName:
    Description: GitHub branch name
    Type: String
    Default: master
  RepositoryName:
    Description: GitHub repository name
    Type: String
    Default: test
  GitHubOwner:
    Type: String
  GitHubSecret:
    Type: String
    NoEcho: true
  ps3wwwName:
    Description: Name of s3 bucket that hosts static
    Type: String
    Default: dev-static-blog-0346
  pRootDomainName:
    Description: Primary domain name
    Type: String
    Default: '*.dev.techminus.net'
  pAdditionalDomainName:
    Description: Alternative domain name
    Type: CommaDelimitedList
    Default: '*.dev.terminustechnicus.net'
  pFQDNs:
    Description: Fully Qualified Domain Names
    Type: CommaDelimitedList
    Default: blog.dev.terminustechnicus.net, blog.dev.techminus.net
Resources:

# S3 Buckets that are website enabled
  rs3WebsiteBucket:
      Type: AWS::S3::Bucket
      Properties:
          BucketName: !Ref ps3wwwName
          AccessControl: PublicRead
          WebsiteConfiguration:
              IndexDocument: index.html
              ErrorDocument: error.html
  rs3WebsiteBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
          PolicyDocument:
              Id: wwwBucketPolicy
              Version: 2012-10-17
              Statement:
                  - Sid: PublicReadForWwwBucket
                    Effect: Allow
                    Principal: '*'
                    Action: 's3:GetObject'
                    Resource: !Sub arn:${AWS::Partition}:s3:::${rs3WebsiteBucket}/*
          Bucket: !Ref rs3WebsiteBucket
          
# Route53 Zones and records
# This already exists in another account
    

# Cloud front / https redirect
  rCDN:
    DependsOn: rCDNOrigin
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
          Enabled: true
          Aliases: !Ref pFQDNs
          ViewerCertificate: 
            AcmCertificateArn: !Ref rSslCertificate
            MinimumProtocolVersion: TLSv1.1_2016
            SslSupportMethod: sni-only
          DefaultRootObject: index.html
          HttpVersion: http2
          IPV6Enabled: true
          PriceClass: PriceClass_All
          Origins:
          - DomainName: !GetAtt rs3WebsiteBucket.DomainName
            Id: myS3Origin
            S3OriginConfig: 
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${rCDNOrigin}
          DefaultCacheBehavior:
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            TargetOriginId: myS3Origin
            ViewerProtocolPolicy: redirect-to-https

  rCDNOrigin:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
        CloudFrontOriginAccessIdentityConfig:
            Comment: 'Access Identity for S3Origin'

# SSL Certificate
  rSslCertificate:  
    Type: AWS::CertificateManager::Certificate
    Properties: 
      DomainName: !Ref pRootDomainName 
      SubjectAlternativeNames: !Ref pAdditionalDomainName
      ValidationMethod: DNS
  
# Code builds and source triggers for stages

  CodePipelineArtifactStoreBucket:
    Type: 'AWS::S3::Bucket'
  CodePipelineArtifactStoreBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref CodePipelineArtifactStoreBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Join 
              - ''
              - - !GetAtt 
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Join 
              - ''
              - - !GetAtt 
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              Bool:
                'aws:SecureTransport': false
  AppPipelineWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubSecret
      Filters:
        - JsonPath: $.ref
          MatchEquals: 'refs/heads/{Branch}'
      TargetPipeline: !Ref AppPipeline
      TargetAction: SourceAction
      Name: AppPipelineWebhook
      TargetPipelineVersion: !GetAtt 
        - AppPipeline
        - Version
      RegisterWithThirdParty: true
  AppPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: github-events-pipeline
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref RepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Ref GitHubSecret 
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build 
          Actions:
            - Name: BuildAction
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactStoreBucket
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: myProjectName
      Description: A description about my project
      ServiceRole: !GetAtt rCodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE 
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/ruby:2.5.1
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      Tags:
        - Key: Key1
          Value: Value1
        - Key: Key2
          Value: Value2        
  rCodeBuildServiceRole:        
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-CodeBuild-Service-3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Sid: CloudWatchLogsPolicy
              Effect: Allow
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource:
              - "*"
            - Sid: CodeCommitPolicy
              Effect: Allow
              Action:
              - codecommit:GitPull
              Resource:
              - "*"
            - Sid: S3GetObjectPolicy
              Effect: Allow
              Action:
              - s3:GetObject
              - s3:GetObjectVersion
              Resource:
              - "*"
            - Sid: S3PutObjectPolicy
              Effect: Allow
              Action:
              - s3:*
              Resource:
              - "*"
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-CodePipeline-Service-3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'devicefarm:ListProjects'
                  - 'devicefarm:ListDevicePools'
                  - 'devicefarm:GetRun'
                  - 'devicefarm:GetUpload'
                  - 'devicefarm:CreateUpload'
                  - 'devicefarm:ScheduleRun'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'elasticbeanstalk:*'
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'ecs:*'
                Resource: '*'

